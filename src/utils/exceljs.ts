// Code generated by ChatGPT XD
import ExcelJS from 'exceljs';
import { ExcelSheet } from '@/types/driverTypes';

export async function exportTableToExcel(dataTable: ExcelSheet[], filename: string) {
  const workbook = new ExcelJS.Workbook();
  const worksheet = workbook.addWorksheet('Hoja 1'); // Crea una nueva hoja

  // Definir columnas
  worksheet.columns = [
    { header: 'No.', key: 'index', width: 5 },
    { header: 'Fecha', key: 'date', width: 15 },
    { header: 'Hora de Entrada', key: 'checkIn', width: 20 },
    { header: 'Hora de Salida', key: 'checkOut', width: 20 },
    { header: 'Nombre del Piloto', key: 'name', width: 25 },
    { header: 'Número de Documento', key: 'documentNumber', width: 25 },
    { header: 'Empresa', key: 'company', width: 20 },
    { header: 'Motivo', key: 'motive', width: 25 }
  ];

  // Añadir las filas de datos
  dataTable.forEach((row) => {
    worksheet.addRow(row);
  });

  // Aplicar estilos al header (fila 1)
  const headerRow = worksheet.getRow(1);
  headerRow.eachCell((cell: any) => {
    cell.fill = {
      type: 'pattern',
      pattern: 'solid',
      fgColor: { argb: 'FF0B5733' }, // Color de fondo (#0B5733)
    };
    cell.font = {
      bold: true,
      color: { argb: 'FFFFFFFF' }, // Texto blanco
    };
  });

  // Centrar todo el contenido de las celdas (tanto header como datos)
  // worksheet.eachRow((row) => {
  //   row.eachCell((cell) => {
  //     cell.alignment = { horizontal: 'center', vertical: 'middle' };
  //   });
  // });

  // Generar y descargar el archivo Excel
  const buffer = await workbook.xlsx.writeBuffer();
  const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
  const link = document.createElement('a');
  link.href = URL.createObjectURL(blob);
  link.download = `${filename}.xlsx`;
  link.click();
};
